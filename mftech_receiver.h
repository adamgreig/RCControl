#pragma once
#include "stdafx.h"

#if WINDOWS
#include <mmsystem.h>
#include <winbase.h>
#elif LINUX
#include <linux/types.h>
#define JOYSTICK "/dev/input/js0"

/**
* \struct js_event
* Hold an event generated by the joystick.
*/
struct js_event {
	__u32 time;
	__s16 value;
	__u8 type;
	__u8 number;
};
#endif

/**
* Connect to an MFTech R/C receiver, represented on the system
* as a joystick, and read in the X and Y axis values to be
* used as throttle and steeling data. The implementation is
* significantly different under Linux and Windows, though the
* external interface is the same.
*/
class MFTechReceiver {
public:
	MFTechReceiver(void);
	int throttle();
	int steering();
	int modeselect();
#if LINUX
private:
	int joystick;
	int throttle_val, steering_val, modeselect_val;
#endif
};
